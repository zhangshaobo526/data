Sass (Syntactically Awesome Stylesheets)是一种动态样式语言，语法跟css一样(但多了些功能)，比css好写，而且更容易阅读。Sass语法类似与Haml，属于缩排语法（makeup），用意就是为了快速写Html和Css。
Less一种动态样式语言. 将CSS赋予了动态语言的特性，如变量，继承，运算， 函数. LESS 既可以在客户端上运行 (支持IE 6+, Webkit, Firefox)，也可一在服务端运行 (借助 Node.js)。
区别：
(1))Sass是基于Ruby的，是在服务端处理的，而Less是需要引入less.js来处理Less代码输出Css到浏览器，也可以在开发环节使用Less，然后编译成Css文件，直接放到项目中，也有Less.app、SimpleLess、CodeKit.app这样的工具，也有在线编译地址。
(2)变量符不一样，less是@，而Scss是$，而且变量的作用域也不一样，后面会讲到。
(3)输出设置，Less没有输出设置，Sass提供4中输出选项：nested, compact, compressed 和 expanded。
(4)Sass支持条件语句，可以使用if{}else{},for{}循环等等。而Less不支持。
制作一个网页的工作流程吗？
	第一步：项目需求评审（明确需求）
	第二步：等待ui设计师提供psd（项目需求技术调研）
	第三步：等到ui设计师设计稿通过以后，给前端制作静态html＋js（自己在浏览器或者移动设置上浏览，查看是否有兼容问题）
	
	以上为基本制作流程
	以下几步为项目对接－一直到发布到线上的过程

	第四步：前后台数据对接完成－测试没有问题以后，提交测试环境（任务给测试人员）
	第五步：修改测试返回的问题（直到测试通过为准）
	第六步：测试发送测试报告以后，提交预生产环境，先试着跑1到2周，观察情况（测试回归任务检验开发任务是否正常）－－－如果不正常返回给响应的开发人员进行修复。
	第七步：正式上线（一般在凌晨更新上线）－－主要原因：减少更新项目对用户影响。
	第八步：测试人员回归－－前端同时参与回归－－后端也参与回归 （如果有问题就悲催了，解决bug，没有问题项目运行正常－－回家睡觉）
谈谈你对WEB标准以及W3C的理解与认识。
1）web标准规范要求，书写标签必须闭合、标签小写、不乱嵌套，可提高搜索机器人对网页内容的搜索几率。--- SEO
2）建议使用外链css和js脚本，从而达到结构与行为、结构与表现的分离，提高页面的渲染速度，能更快地显示页面的内容。
3）样式与标签的分离，更合理的语义化标签，使内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件， 从而降低维护成本、改版更方便
4）不需要变动页面内容，便可提供打印版本而不需要复制内容，提高网站易用性
5）遵循w3c制定的web标准，能够使用户浏览者更方便的阅读，使网页开发者之间更好的交流。
